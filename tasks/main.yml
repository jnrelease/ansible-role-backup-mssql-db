---
- name: Prepare database names for SQL script
  set_fact:
    db_names_sql: "{{ db_names | map('regex_replace', '^', \"'\") | map('regex_replace', '$', \"'\") | join(', ') }}"
  when: "{{ inventory_hostname == 'sqltest' }}"
  delegate_to: sqltest
  notify: PrepareDBNames

- name: Create backup folder
  win_file:
    path: '{{ bak_path }}'
    state: directory
  when: "{{ inventory_hostname == 'sqltest' }}"
  delegate_to: sqltest
  notify: BackUpFolder Created
  ignore_errors: true
  register: result

- name: Generate SQL script from template
  template:
    src: ../templates/backup.sql.j2
    dest: "{{bak_path}} + 'backup.sql'"
  when: "{{ inventory_hostname == 'sqltest' }}"
  delegate_to: sqltest
  notify: BackupSQL Created

- name: Execute SQL script on database
  win_shell: |
    Invoke-Sqlcmd -ServerInstance "localhost"  -InputFile "{{bak_path}} + 'backup.sql' -ConnectionTimeout 100 -QueryTimeout 300" 
  when: "{{ inventory_hostname == 'sqltest' }}"
  delegate_to: sqltest
  register: sql_output
  notify: BackupSQL Executed

